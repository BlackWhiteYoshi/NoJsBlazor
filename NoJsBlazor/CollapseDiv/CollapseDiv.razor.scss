$xs: 0px;
$sm: 576px;
$md: 768px;
$lg: 992px;
$xl: 1200px;
/**
 * bootstrap variables for container
 * sm: 540px,
 * md: 720px,
 * lg: 960px,
 * xl: 1140px
 */

@mixin media-breakpoint-up($width) {
    @media (min-width: $width) {
        @content;
    }
}

@mixin media-breakpoint-down($width) {
    @media (max-width: $width - 0.01) {
        @content;
    }
}


.collapse-div {
    // speed of collapsing/expanding
    $speed: 0.3s;

    display: inline-block;
    width: 100%;
    padding: 20px 50px 20px 20px;
    background-color: #DDE;
    transition: height $speed ease-out;  

    @include media-breakpoint-down($md) {
        margin: 0 0 40px 0;
    }

    & > .content-div {
        transition: transform $speed ease-out;
    }

    // content of button/headline
    .button-div > p {
        text-align: center;
        cursor: pointer;
    }

    p {
        margin: 0 0 10px 0;
        font-size: 17px;
        line-height: 22px;
    }


    // optional drop-down-icon, can be used with <span class="drop-down-arrow"></span>
    .drop-down-arrow {
        width: 12px;
        height: 12px;
        margin: 0 -12px 0 5px;
        transition: transform 0.3s;
        display: inline-block;
        background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><circle cx='50' cy='50' r='47' fill='rgb(255,255,255)' stroke='rgb(0,0,0)' stroke-width='6'/><polygon points='53,63 33,43' stroke='rgb(0,0,0)' stroke-width='6'/><polygon points='47,63 67,43' stroke='rgb(0,0,0)' stroke-width='6'/></svg>");
    }

    // if component is expanded, button-div has also the class collapseable
    .button-div.collapseable .drop-down-arrow {
        transform: rotate(180deg);
    }

    // if component is collapsed, button-div has also the class collapsed
    .button-div.collapsed .drop-down-arrow {
        transform: rotate(0deg);
    }
}
