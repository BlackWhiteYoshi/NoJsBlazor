@using Microsoft.AspNetCore.Components.Web

@namespace NoJsBlazor
@inherits ListholdingComponentBase<CarouselItem>

<div class="carousel" @attributes="@Attributes">
    <div class="carousel-content">
        <CascadingValue Name="Parent" Value="(ListholdingComponentBase<CarouselItem>)this" IsFixed="true">
            @Items
        </CascadingValue>
    </div>
    @if (Overlay != null) {
        <div class="carousel-overlay">
            @Overlay
        </div>
    }
    @if (ControlArrowsEnable) {
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="-4 -4 8 8" class="carousel-arrow prev" role="button" @onclick="PrevButton">
            <desc>Cycles the carousel to the previous image.</desc>
            <line x1="-1.5" y1="0" x2="1.5" y2="-3" />
            <line x1="-1.5" y1="0" x2="1.5" y2="3" />
        </svg>

        <svg xmlns="http://www.w3.org/2000/svg" viewBox="-4 -4 8 8" class="carousel-arrow next" role="button" @onclick="NextButton">
            <desc>Cycles the carousel to the next image.</desc>
            <line x1="1.5" y1="0" x2="-1.5" y2="-3" />
            <line x1="1.5" y1="0" x2="-1.5" y2="3" />
        </svg>
    }
    @if (IndicatorsEnable) {
        <ol class="carousel-indicator-list">
            @foreach (int i in Enumerable.Range(0, childList.Count)) {
                <li role="button" @onclick="_ => IndicatorButton(i)">
                    @{
                        (string active, string progressActive, int progressTime) = (Active == i) switch {
                            true => interval.Enabled switch {
                                true => ("active", "active", (int)IntervalTime),
                                false => ("active", string.Empty, 0)
                            },
                            false => (string.Empty, string.Empty, 0),
                        };
                    }
                    <div class="@active" role="img">
                        <div class="@progressActive" style="transition: width @(progressTime)ms linear;"></div>
                    </div>
                </li>
            }
        </ol>
    }
    @if (PlayButtonEnable) {
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="-0.7 -1.1 1.95 2.2" class="carousel-play-button @(!Running ? "play" : "pause")" role="button" @onclick="PlayButton">
            <desc>Toggle to start and stop the animation of this carousel.</desc>
            @* 1/3 circle => cbrt(1) = (1,0),(-0.5,-0.866),(.0.5,0.866) *@
            @* play trianlge: right, top-left, bottom-left *@
            <polygon points="1,0 -0.5,-0.866 -0.5,0.866" />
            @* pause lines: left, right *@
            <line x1="-0.3" x2="-0.3" y1="-0.666" y2="0.666" />
            <line x1="0.8" y1="-0.666" x2="0.8" y2="0.666" />
        </svg>
    }
</div>
