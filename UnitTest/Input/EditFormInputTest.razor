@namespace UnitTest
@inherits TestContext

@code {
    private class TestModel {
        public string? Text { get; set; }
    }


    private (IRenderedFragment, EditFormInput) RenderTitle(string title) {
        TestModel testModel = new TestModel();
        EditFormInput? editFormInput = null;

        IRenderedFragment fragment = Render(
            @<EditForm Model="testModel">
                <EditFormInput @ref="editFormInput" @bind-Value="testModel.Text" Title="@title"></EditFormInput>
            </EditForm>
            );

        return (fragment, editFormInput!);
    }

    private (IRenderedFragment, EditFormInput) RenderLabel(string label) {
        TestModel testModel = new TestModel();
        EditFormInput? editFormInput = null;

        IRenderedFragment fragment = Render(
            @<EditForm Model="testModel">
                <EditFormInput @ref="editFormInput" @bind-Value="testModel.Text" Label="@label"></EditFormInput>
            </EditForm>
            );

        return (fragment, editFormInput!);
    }

    private (IRenderedFragment, EditFormInput) RenderType(string type) {
        TestModel testModel = new TestModel();
        EditFormInput? editFormInput = null;

        IRenderedFragment fragment = Render(
            @<EditForm Model="testModel">
                <EditFormInput @ref="editFormInput" @bind-Value="testModel.Text" Type="@type"></EditFormInput>
            </EditForm>
            );

        return (fragment, editFormInput!);
    }

    private (IRenderedFragment, EditFormInput) RenderId(string id) {
        TestModel testModel = new TestModel();
        EditFormInput? editFormInput = null;

        IRenderedFragment fragment = Render(
            @<EditForm Model="testModel">
                <EditFormInput @ref="editFormInput" @bind-Value="testModel.Text" Id="@id"></EditFormInput>
            </EditForm>
            );

        return (fragment, editFormInput!);
    }

    private (IRenderedFragment, EditFormInput) RenderName(string name) {
        TestModel testModel = new TestModel();
        EditFormInput? editFormInput = null;

        IRenderedFragment fragment = Render(
            @<EditForm Model="testModel">
                <EditFormInput @ref="editFormInput" @bind-Value="testModel.Text" Name="@name"></EditFormInput>
            </EditForm>
            );

        return (fragment, editFormInput!);
    }

    private (IRenderedFragment, EditFormInput) RenderAutocomplete(bool enabled) {
        TestModel testModel = new TestModel();
        EditFormInput? editFormInput = null;

        IRenderedFragment fragment = Render(
            @<EditForm Model="testModel">
                <EditFormInput @ref="editFormInput" @bind-Value="testModel.Text" Autocomplete="enabled"></EditFormInput>
            </EditForm>
            );

        return (fragment, editFormInput!);
    }


    private (IRenderedFragment, EditFormInput, TestModel) RenderStandard() {
        TestModel testModel = new TestModel();
        EditFormInput? editFormInput = null;

        IRenderedFragment fragment = Render(
            @<EditForm Model="testModel">
                <EditFormInput @ref="editFormInput" @bind-Value="testModel.Text"></EditFormInput>
            </EditForm>
            );

        return (fragment, editFormInput!, testModel);
    }
}
