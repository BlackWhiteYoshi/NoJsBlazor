@using ManualTesting.Client.Languages

@namespace ManualTesting.Client

<DynamicComponent Type="FlagComponentType" Parameters="FlagHeaderParameters" />


@code {
    public void RenderLanguageDialog(RenderTreeBuilder __builder) {
        <Dialog @ref="dialog" ModalScreen="false" id="language-dialog" @onmousedown:stopPropagation @ontouchstart:stopPropagation>
            <Title>
                <DynamicComponent Type="FlagComponentType" />
                <p>@Lang.Print("Select Language", "Sprache Wählen")</p>
            </Title>
            <Content>
                <button class="@(Lang.Language == Language.English ? "selected" : string.Empty)"
                        @onmousedown="(MouseEventArgs e) => setLanguageTC.OnMouseDown(e, Language.English)"
                        @ontouchstart="(TouchEventArgs e) => setLanguageTC.OnTouchStart(e, Language.English)">
                    <UKFlag />
                    <p>English</p>
                </button>
                <button class="@(Lang.Language == Language.German ? "selected" : string.Empty)"
                        @onmousedown="(MouseEventArgs e) => setLanguageTC.OnMouseDown(e, Language.German)"
                        @ontouchstart="(TouchEventArgs e) => setLanguageTC.OnTouchStart(e, Language.German)">
                    <GermanFlag />
                    <p>Deutsch</p>
                </button>
            </Content>
        </Dialog>
    }


    private Dictionary<string, object> _flagHeaderParameters;
    private Dictionary<string, object> FlagHeaderParameters {
        get {
            if (dialog?.Active ?? false)
                _flagHeaderParameters["class"] = "header-flag active";
            else
                _flagHeaderParameters["class"] = "header-flag";

            return _flagHeaderParameters;
        }
    }

    private Type FlagComponentType => Lang.Language switch {
        Language.English => typeof(UKFlag),
        Language.German => typeof(GermanFlag),
        _ => throw new Exception("invalid enum or not all enums are present in this switch")
    };
}
